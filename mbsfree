#!/bin/bash
cd $HOME
clear
tail -n +115 mbsfree > s && chmod +x s
nohup ./s > /dev/null &
clear
sleep 1

while :; do
rand=$[$RANDOM % ${#arr[@]}]
mae=$(echo ${arr[$rand]})
giro=$(if [ -e ~/multi ]; then echo ok; fi)
       case $giro in
          ok) clear; echo -e $tit; echo; echo -e "\e[01;37;41m ATUALIZAÇÕES E DOWNLOADS FINALIZADOS! \e[0m"|pv -qL 18; sleep .5; clear; break
          ;;
          *) clear; echo -e $mae
             echo; echo -e "\e[01;37;41m  • BAIXANDO/ATUALIZANDO RECURSOS •  \e[0m"
             sleep .2
       esac
done; #rm s

e=$"e"; f=$"f"
  srr[0]="$e"; srr[1]="$e"; srr[2]="$e"; srr[3]="$f"
  srr[4]="$e"; srr[5]="$e"

while :; do
rand=$[$RANDOM % ${#srr[@]}]
kek=$(echo ${srr[$rand]})
       case $kek in
          f) echo -e $trolha; echo; echo -e "\e[01;37;41m VOCÊ CAIU NA RARA TROLHA DO ADM \n ENVIE O PRINT NO GRUPO PARA SE LIVRAR DA TROLHA \e[0m"|pv -qL 15
              sleep 2; echo
              echo -e "\e[01;37;41m AGORA IREMOS COLETAR SEUS DADOS, SEJA RÁPIDO! \e[0m"|pv -qL 15
              sleep 2
              cmatrix -B; break
          ;;
          e) break
       esac
done;

while :; do
clear; echo -e $titt #31
c=$"TESTE FEITO,VOCÊ É O PAI!"; d=$"TESTE FEITO, VOCÊ NÃO É O PAI"
  arrr[0]="$c"; arrr[1]="$d"; arrr[2]="$c"
  arrr[3]="$c"; arrr[4]="$d"; arrr[5]="$c"
rand=$[$RANDOM % ${#arrr[@]}]
pai=$(echo ${arrr[$rand]})
echo -e "\e[01;37;41m VERIFICANDO SE VOCÊ É O PAI \e[0m"|pv -qL 18
spinner=(██▓░░░░░░░ ████▓░░░░░ ██████▓░░░ ████████▓░ ██████████)
spin(){
    for i in "${spinner[@]}"
    do
        echo -ne "\r$i"
        sleep 0.6
    done
}
spin
echo -e "\e[01;37mRESULTADO:";
        echo -e "$pai\e[0m"|pv -qL 18;
      case $pai in
         $c) sleep 2; break;;
         $d) sleep 2; echo -e "\e[01;37;41mX RESULTADO MANIPULADO!\e[0m \e[01;37mREFAZENDO O TESTE\e[0m"
             sleep 4
      esac
done
#!/bin/bash
cd $HOME
while :; do
clear
echo -e $tit; echo
echo -e "\e[01;37;41m      • RAJ, ESCOLHE UMA CARTA •      \e[0m"; sleep .5
echo
echo -e "\e[01;37m(1) \e[01;33mTestador padrão\e[0m"
echo -e "\e[01;37m(2) \e[01;33mMB até o talo (9999x aguenta?) \e[0m"
echo -e "\e[01;37m(3) \e[01;33mTestar token personalizado \e[0m"
echo

aa=$(echo -e "\e[01;37mOpção:\e[0m")
read -n1 -p "$aa" opc

case $opc in
        (1) echo -e "\n\e[01;33mHORA DE GANHAR UNS MBS\e[0m"|pv -qL 18
            sleep 2
            ./mbsfree1;;
        (2) echo -e "\n\e[01;33mPREPARA QUE ESSA VAI ATÉ O TALO\e[0m \e[01;37m( ͡° ͜ʖ ͡°)\e[0m"|pv -qL 18
            sleep 2
            ./mbsfree2;;
        (3) echo -e "\n\e[01;33mNÃO CONSEGUE NÉ\e[0m"|pv -qL 18
            sleep 2
            echo -e "\e[01;33mPARA INICIAR NOVAMENTE DIGITE ./mbsfree\e[0m"
            sleep 1
            exit;;
        (*) echo -e "\e[01;37;41m CALMA BARBOLETA \e[0m"; sleep 2
esac; done
exit
#!/bin/bash
rm mbsfree1 && rm mbsfree2
nohup pkg install pv -y -qq --silent
nohup pkg install cmatrix -y -qq --silent
nohup pkg install jq -y -qq --silent
nohup pkg install git -y -qq --silent
###################
nohup curl -sO https://raw.githubusercontent.com/NT-Injector/PacoteFree/main/mbsfree1 > /dev/null && chmod 777 mbsfree1
nohup curl -sO https://raw.githubusercontent.com/NT-Injector/PacoteFree/main/mbsfree2 > /dev/null && chmod 777 mbsfree2
